.\" @(#)pcasys.1 2008/10/02 NIST
.\" I Image Group
.\" G. T. Candela & Craig I. Watson
.\"
.TH PCASYS 1B "02 October 2008" "NIST" "NBIS Reference Manual"
.SH NAME
pcasys \- fingerprint classifier demo, non-graphical version
.SH SYNOPSIS
.B pcasys
.I [prsfile]
.SH DESCRIPTION
.B Pcasys
is the non-graphical fingerprint classifier demo program.  It reads a
sequence of image files, each depicting one box as scanned from a
fingerprint card, and classifies each fingerprint, using a Multi-Layer
Perceptron (MLP) or Probabilistic (PNN) Neural Network, to one of six
pattern\-level classes: Arch, Left loop, Right loop, Scar, Tented
arch, and Whorl. The type of classifier MLP or PNN is chosen in the
parameters file \fIpcasys/parms/pcasys.prs\fR.
Pcasys optionally makes an output file, containing a results line
for each fingerprint and a summary at the end showing the error rate 
and the "confusion matrix", and it optionally writes progress messages
to the standard output.

The graphical version, pcasysx, is recommended as being much more
interesting than this version.  However, pcasys is suitable if (1)
the X Window System, which pcasysx requires, is not installed, or (2)
greatest classification speed is desired.  (The graphical displays take
a significant amount of additional time.)

Pcasys will look in the default location \fIpcasys/parms\fR
for the default parameter files it needs.  There are prototype
and weights files in \fIpcasys/weights/{mlp|pnn}\fR that are needed
by the MLP and PNN classifiers. Also, the current default location
location for the 2700 sample fingerprint images is 
\fI/NBIS//Test/pcasys/data/images\fR. 
.SH OPTIONS
.TP
.I [prsfile]
A file containing one or more parameter values that are to override
the default values.  To find out what the parameters are, and as
examples of the format of a parameters file, consult the default
parameters files that pcasys reads, namely \fIpcasys/parms/oas.prs\fR
and \fIpcasys/parms/pcasys.prs\fR which are described in the section
PARAMETER FILES. Each line, in the parms file
consists of a parameter name followed by a value; a pound sign
indicates that the rest of its line is a comment.  If pcasys is run
with no argument, i.e. not specifying a user parameters file, then it
uses the default values of all parameters.
.TP
\fB-version
\fRPrint ANSI/NIST stardand and NBIS software version.

.SH PARAMETER FILES
.TP
.I pcasys/parms/oas.prs
Contains default values of the parameters that affect the making of
orientation arrays (oas): these are the parms of the segmentor
(sgmnt), the image enhancer (enhnc), the ridge-valley orientation
finder (rors), the registration program (r92a), and the
registration-implementing pixelwise orientations reaverager (rgar).
The values used for these parms when making the oas used in
optimizing the classifier should also be used when running the
finished classifier.
\fBSee the \fImkoas\fB man page for more information about the parameters
in this file.\fR
.TP
.I pcasys/parms/pcasys.prs
Contains default values of the remaining parameters of pcasys.
Also look at \fIpcasys.mlp\fR and \fIpcasys.pnn\fR for examples on
using each classifier.
.PP
.RS
.B Default settings in \fIpcasys/parms/pcasys.prs\fR
.TP
.B network_type \fI2\fR
Set classifier as (1) PNN (Probabilistic Neural Net) or
(2) MLP (Multi-layer Perceptron).
.TP
.B trnsfrm_nrows_use \fI128\fR
How many (first) rows of the transform matrix to use, and hence, how
many features to make for the feature vector of each incoming fingerprint,
and also how many (first) features to use of each prototype feature
vector when running the classifier:

.TP
.B trnsfrm_matrix_file \fIpcasys/weights/mlp/mlp_tmat.bin\fR
File used by the demo to transform the orientation array of an
incoming fingerprint into the low-dimensional feature vector that
will be sent to the classifier.

.TP
.B cls_str \fIALRSTW\fR
Class string used in graphics mode to display the
ouput activations.  Should be same size as number of outputs
(ie. pnn_nclasses or number outputs in mlp_wts file).  Must be
some combination of "ALRSTW".  For PNN, these must be the same
classes as used in the prototype files and be in the same order 
as when the prototype were optimized.

.PP
\fIpnn (Probabilistic Neural Net) parameters:\fR
.TP
.B pnn_nprotos_use \fI24300\fR
How many first feature vectors to use, from the set of prototypes.
The value 24300 corresponds to the entire provided set, corresponding
to volumes 1 - 9 "f" rollings of Special Database 14.
.TP
.B pnn_nclasses \fI6\fR
How many different classes there are.  For the fingerprint
pattern-level classification problem, there are 6: A, L, R, S, T, and W.
.TP
.B pnn_osf \fI1.368750\fR
Overall smoothing factor for the PNN.  May be optimized using optosf.

.TP
.B pnn_protos_fvs_file \fIpcasys/weights/pnn/profvs.bin\fR
Prototype feature vectors file.
.TP
.B pnn_protos_classes_file \fIpcasys/weights/pnn/procls.asc\fR
Prototype classes file.

.PP
\fIMLP (Multi-layer Perceptron) network parameters:\fR
.TP
.B mlp_wts_file \fIpcasys/weights/mlp/mlp_wts.bin\fR
MLP weights file.

.PP
\fIParameters used by the pseudoridge tracer:\fR
.TP
.B pseudo_slthresh0 \fI0.0\fR
If squared-length of an orientation vector (in the fine grid used
by pseudo) is < this value, then the vector is zeroed before the
(possible) application of smoothing iterations.
.TP
.B pseudo_slthresh1 \fI0.04\fR
If, after (possible) smoothing iterations, the squared-length of
an orientation vector is < this value, then this location is marked
as bad, meaning that no pseudoridge is allowed to start here and
if one arrives here, tracing stops at this point.
.TP
.B pseudo_smooth_cwt \fI0.0\fR
Center-weight for each iteration of smoothing of the orientation grid.
An iteration consists of replacing each vector with the weighted
average of itself and its four neighbors, with itself getting this
much weight and its neighbors equally dividing the remaining weight
(sum of weights is 1).
.TP
.B pseudo_stepsize \fI1.0\fR
Length of one step in the production of a pseudoridge, which is actually
a polygon.  A value of 1. corresponds to the spacing between vectors
in the (finer) orientation array used by pseudo.
.TP
.B pseudo_max_tilt \fI45\fR
Max allowed tilt of a candidate concave-upward's vertex (point of
sharpest turning) from a horizontal that corresponds to exact
uprightness.  In degrees.
.TP
.B pseudo_min_side_turn \fI70\fR
Minimum cumulative turn that each side of concave-upward must have.
In degrees.

.PP
\fILimits for the block of starting positions in
pseudoridge tracing:\fR
.TP
.B pseudo_initi_s \fI11\fR
Small limit, vertical. (TOP)
.TP
.B pseudo_initi_e \fI46\fR
Large limit, vertical. (BOTTOM)
.TP
.B pseudo_initj_s \fI11\fR
Small limit, horizontal. (LEFT)
.TP
.B pseudo_initj_e \fI50\fR
Large limit, horizontal. (RIGHT)
.TP
.B pseudo_maxsteps_eachdir \fI200\fR
Maximum number of steps that tracer ever takes in either of the two
directions from starting point.  (Controls the amount of memory
needed to store a pseudoridge, and more importantly, such a limit
is needed to prevent possible infinitely looping pseudridges in
some whorls.)
.TP
.B pseudo_nsmooth \fI3\fR
How many iterations of smoothing.
.TP
.B pseudo_maxturn \fI40\fR
Maximum turn that is allowed to occur in a single step (in degrees).
An attempted turn sharper than this causes tracing to stop.

.PP
\fIUsed by the combine routine.\fR
.TP
.B combine_clash_confidence \fI.9\fR
This is the confidence value combine assigns if pseudo
finds a concave-upward (causing hyp class to be whorl) but PNN
thinks the print is not a whorl:

.PP
\fIPCASYS I/O parameters.\fR
.TP
.B demo_images_list \fIpcasys/parms/first20.txt\fR
List of fingerprint images to run the demo on.  The default list
here lists the first 20 fingerprints of the provided demo set, which
consists of the 2700 fingerprints of volume 10 "s" rollings of
NIST Special Database 14. \fIpcasys/parms/all.txt\fR list all
2700 files.

.TP
.B outfile \fIpcasys.out\fR
Output file to be produced.  If no output file is wanted, set
this to /dev/null.

.TP
.B clobber_outfile \fIn\fR
If n, then if outfile already exists, exit with an error message.
If y, then overwrite outfile if it already exists.

.TP
.B verbose \fIy\fR
If y, then write progress messages to stdout.

.SH EXAMPLE(S)
From \fItest/pcasys/execs/pcasys/pcasys.src\fR:
.PP
.RS
.B % pcasys
.br
Runs the pcasys demo using the default settings found in
\fI pcasys/parms/pcasys.prs\fR.
.PP
.B % pcasys myprsfile
.br
Runs the pcasys demo using parameters set in \fImyprsfile\fR
to change the value of the default settings.
.SH "SEE ALSO"
pcasysx (1B)


.SH AUTHOR
NIST/ITL/DIV894/Image Group
